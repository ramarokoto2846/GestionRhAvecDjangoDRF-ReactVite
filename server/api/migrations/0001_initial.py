# Generated by Django 5.2.6 on 2025-10-30 06:44

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id_departement', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
                ('responsable', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('nbr_employe', models.IntegerField(default=0)),
                ('localisation', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_departements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('matricule', models.CharField(max_length=6, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^\\d{6}$', 'Le matricule doit contenir exactement 6 chiffres')])),
                ('titre', models.CharField(choices=[('stagiaire', 'Stagiaire'), ('employe', 'Employe Fixe')], default='stagiaire', max_length=20)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telephone', models.CharField(blank=True, max_length=50, null=True)),
                ('poste', models.CharField(max_length=100)),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif')], default='actif', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_employes', to=settings.AUTH_USER_MODEL)),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employes', to='api.departement')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employe_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conge',
            fields=[
                ('id_conge', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('nbr_jours', models.IntegerField(editable=False)),
                ('motif', models.TextField()),
                ('motif_refus', models.TextField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('valide', 'Validé'), ('refuse', 'Refusé')], default='en_attente', max_length=20)),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('date_decision', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_conges', to=settings.AUTH_USER_MODEL)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conges', to='api.employe')),
            ],
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id_evenement', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('duree', models.DurationField(blank=True, editable=False, null=True)),
                ('lieu', models.CharField(blank=True, max_length=200, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_evenements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StatistiquesGlobales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periode', models.DateField(unique=True)),
                ('type_periode', models.CharField(choices=[('mensuel', 'Mensuel'), ('annuel', 'Annuel')], max_length=20)),
                ('total_employes', models.IntegerField(default=0)),
                ('employes_actifs', models.IntegerField(default=0)),
                ('total_departements', models.IntegerField(default=0)),
                ('departements_actifs', models.IntegerField(default=0)),
                ('taux_activite_global', models.FloatField(default=0)),
                ('total_pointages', models.IntegerField(default=0)),
                ('pointages_reguliers', models.IntegerField(default=0)),
                ('heures_travail_total', models.DurationField(blank=True, null=True)),
                ('moyenne_heures_quotidiennes', models.DurationField(blank=True, null=True)),
                ('taux_presence', models.FloatField(default=0)),
                ('taux_regularite_global', models.FloatField(default=0)),
                ('total_conges', models.IntegerField(default=0)),
                ('conges_valides', models.IntegerField(default=0)),
                ('conges_refuses', models.IntegerField(default=0)),
                ('conges_en_attente', models.IntegerField(default=0)),
                ('taux_validation_conges', models.FloatField(default=0)),
                ('total_evenements', models.IntegerField(default=0)),
                ('date_calcul', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Statistiques globales',
                'verbose_name_plural': 'Statistiques globales',
                'indexes': [models.Index(fields=['periode', 'type_periode'], name='api_statist_periode_8ac764_idx')],
            },
        ),
        migrations.CreateModel(
            name='Pointage',
            fields=[
                ('id_pointage', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('date_pointage', models.DateField(default=datetime.date.today)),
                ('heure_entree', models.TimeField()),
                ('heure_sortie', models.TimeField(blank=True, null=True)),
                ('remarque', models.TextField(blank=True, default='Sans remarque.', null=True)),
                ('duree_travail', models.DurationField(blank=True, editable=False, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_pointages', to=settings.AUTH_USER_MODEL)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pointages', to='api.employe')),
            ],
            options={
                'unique_together': {('employe', 'date_pointage')},
            },
        ),
        migrations.CreateModel(
            name='StatistiquesEmploye',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periode_debut', models.DateField()),
                ('periode_fin', models.DateField()),
                ('type_periode', models.CharField(choices=[('hebdo', 'Hebdomadaire'), ('mensuel', 'Mensuel'), ('annuel', 'Annuel')], max_length=20)),
                ('heures_travail_total', models.DurationField(blank=True, null=True)),
                ('jours_travailles', models.IntegerField(default=0)),
                ('moyenne_heures_quotidiennes', models.DurationField(blank=True, null=True)),
                ('pointages_reguliers', models.IntegerField(default=0)),
                ('pointages_irreguliers', models.IntegerField(default=0)),
                ('taux_regularite', models.FloatField(default=0)),
                ('conges_valides', models.IntegerField(default=0)),
                ('conges_refuses', models.IntegerField(default=0)),
                ('conges_en_attente', models.IntegerField(default=0)),
                ('total_jours_conges', models.IntegerField(default=0)),
                ('taux_approbation_conges', models.FloatField(default=0)),
                ('jours_ouvrables', models.IntegerField(default=0)),
                ('date_calcul', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_statistiques_employe', to=settings.AUTH_USER_MODEL)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistiques', to='api.employe')),
            ],
            options={
                'verbose_name': 'Statistiques employé',
                'verbose_name_plural': 'Statistiques employés',
                'indexes': [models.Index(fields=['employe', 'periode_debut', 'periode_fin'], name='api_statist_employe_c20cde_idx'), models.Index(fields=['type_periode', 'periode_debut'], name='api_statist_type_pe_9364f1_idx')],
                'unique_together': {('employe', 'periode_debut', 'periode_fin', 'type_periode')},
            },
        ),
    ]
